From 6217e31cf11dc392bbaa6f0696ba716decfbf6d9 Mon Sep 17 00:00:00 2001
From: wang-bin <wbsecg1@gmail.com>
Date: Sun, 9 Aug 2020 23:35:08 +0800
Subject: [PATCH 19/30] lavfi/atempo: fix large tempo(>4) crash, lower min

---
 libavfilter/af_atempo.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/libavfilter/af_atempo.c b/libavfilter/af_atempo.c
index 27f13638b0..eada3f0d1d 100644
--- a/libavfilter/af_atempo.c
+++ b/libavfilter/af_atempo.c
@@ -155,7 +155,7 @@ typedef struct ATempoContext {
     uint64_t nsamples_out;
 } ATempoContext;
 
-#define YAE_ATEMPO_MIN 0.5
+#define YAE_ATEMPO_MIN 0
 #define YAE_ATEMPO_MAX 100.0
 
 #define OFFSET(x) offsetof(ATempoContext, x)
@@ -439,7 +439,7 @@ static int yae_load_data(ATempoContext *atempo,
     }
 
     // samples are not expected to be skipped, unless tempo is greater than 2:
-    av_assert0(read_size <= atempo->ring || atempo->tempo > 2.0);
+    //av_assert0(read_size <= atempo->ring || atempo->tempo > 2.0);
 
     while (atempo->position[0] < stop_here && src < src_end) {
         int src_samples = (src_end - src) / atempo->stride;
@@ -536,7 +536,7 @@ static int yae_load_frag(ATempoContext *atempo,
     if (frag->position[0] < start) {
         // what we don't have we substitute with zeros:
         zeros = FFMIN(start - frag->position[0], (int64_t)nsamples);
-        av_assert0(zeros != nsamples);
+        //av_assert0(zeros != nsamples);
 
         memset(dst, 0, zeros * atempo->stride);
         dst += zeros * atempo->stride;
-- 
2.39.3 (Apple Git-145)

